data_root: ./data/version_3
marker_mapping: # can be used as CEA: all or CEA: CEA&SCCA. You can comment a marker to disable it
  CEA: ALL
  CYFRA21: ALL
  SCCA: ALL
  NSE: ALL
  ProGRP: ALL
  CA125: ALL
  EGFR: ALL
  IDH1: ALL
  #  CGA: ALL
  TTF1: ALL
  SYN: ALL
  CD56: ALL
#  TPA: ALL
features:
  #  - Ct1
  #  - Ct2
  #  - GAPDH1
  #  - GAPDH2
  #  - GAPDHmean
  #  - ΔCt 1
  #  - ΔCt 2
  #  - ΔΔCt 1
  #  - ΔΔCt 2
  #  - Fold 1
  #  - Fold 2
  - Ave Fold
  - sd
#feature_mean:
#  [ -2.8863, -3.7717,
#    1.3902, -1.4745,
#    -4.9890, -5.88771,
#    -1.3605, -2.9930,
#    -2.6304, -3.6785,
#    -2.1682, -3.5525,
#    -3.6714, -4.9900,
#    -0.7517, -2.6673,
#    0.0159, -0.9890,
#    -5.1045, -6.0825,
#    -7.9876, -8.4709
#  ]
data_clean:
  #  'local_outlier_factor'
  - "0014"
  - "0023"
  - "0007"
  - "1009"
  - "2033"
  - "2017"
  - "3001"
  - "4001"
  - "5003"
  - "5005"
  - "5022"
feature_norm:
  method: log
class_mapping: # You can comment a class to disable it
  0: 0
  1: 0
  2: 0
  3: 0
  #  4: 0
  5: 1
feature_selection:
  #  method: RFE
  #  kwargs_search:
  #    n_features_to_select: [14]
  #  #    n_features_to_select: [ 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25 ]
  method: custom
  selection:
    ALL:
      [
          true, true,
          true, true,
          true, true,
          false, false,
          true, true,
          true, true,
          true, true,
          true, true,
          true, true,
          true, true,
          true, true,
      ]
feature_transformation:
  method: lmnn
  kwargs_search:
    n_components: [ 5 ]
    init: [ pca ]
    #    init: [ pca, identity ]
    k: [ 3, 5 ]
#    k: [ 1, 3, 5 ]

num_split_fold: 3  # num-fold strategy to split train and eval dataset
num_repeat_split_fold: 10  # for RepeatedKFold
split_random_seed: 0.2
# if None, only use the samples that has all markers. or set the default value.
default_missing_value: null
num_samples_in_each_bag: 1  # samples: original sample study. bag: model input with the same class

model: svm
model_kwargs:
  probability: true
  random_state: 1
  class_weight: balanced
model_kwargs_search:
  kernel: [ linear, rbf ]
  #  kernel: [ linear ]
  C: [ 0.00005, 0.01, 1, 10 ]

