data_root: ./data/version_2
marker_mapping: # can be used as CEA: all or CEA: CEA&SCCA. You can comment a marker to disable it
  CEA: ALL
  CYFRA21: ALL
  SCCA: ALL
  NSE: ALL
  ProGRP: ALL
  CA125: ALL
  EGFR: ALL
  IDH1: ALL
  CGA: ALL
  TTF1: ALL
  SYN: ALL
  CD56: ALL
  TPA: ALL
#  CEA: ALL
#  CYFRA21: ALL
#  SCCA: ALL
#  NSE: ALL
#  GRP: ALL
#  CA125: ALL
#  EGFR: ALL
#  IDH1: ALL
features:
  #  - Ct1
  #  - Ct2
  #  - GAPDH1
  #  - GAPDH2
  #  - GAPDHmean
  #  - ΔCt 1
  #  - ΔCt 2
  #  - ΔΔCt 1
  #  - ΔΔCt 2
#  - Fold 1
  #  - Fold 2
  - Ave Fold
  - sd
class_mapping: # You can comment a class to disable it
  0: 1
  1: 0
  2: 0
  3: 0
  #  4: 0
  5: 0
feature_selection:
##    method: RFE
  ##    kwargs_search:
  ##      n_features_to_select: [16]
  #  #    n_features_to_select: [ 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25 ]
  #  #    n_features_to_select: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 ]
  #  method: custom
  selection:
    ALL:
      [ false, false,
        true, true,
        true, true,
        true, true,
        true, true,
        true, true,
        true, true,
        true, true,
        true, true,
        true, true,
        true, true,
        true, true,
        true, true ]
#    ALL:
#      [ true, true,
#        false, false,
#        true, true,
#        false, false,
#        false, false,
#        true, true,
#        true, true,
#        true, true,
#        true, true,
#        true, true,
#        false, false,
#        false, false,
#        true, true ]
feature_transformation:
  method: lmnn

  kwargs_search:
    n_components: [ 1 ]
    #    n_components: [ null, 2, 4, 8, 16 ]
    init: [ lda ]
    #    init: [ pca, identity ]
    k: [ 3 ]
#    k: [ 1, 3, 5 ]

num_split_fold: 3  # num-fold strategy to split train and eval dataset
num_repeat_split_fold: 30  # for RepeatedKFold
split_random_seed: 0.2
# if None, only use the samples that has all markers. or set the default value.
default_missing_value: null
num_samples_in_each_bag: 1  # samples: original sample study. bag: model input with the same class

model: svm
model_kwargs:
  probability: true
  random_state: 1
  class_weight: balanced
model_kwargs_search:
  kernel: [ linear, rbf ]
  #  kernel: [ linear ]
  C: [ 0.00005, 0.01, 1, 10 ]

