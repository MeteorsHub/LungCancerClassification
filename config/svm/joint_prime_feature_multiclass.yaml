data_root: ./data/version_2
#data_clean: local_outlier_factor  # isolation_forest, local_outlier_factor, robust_covariance or one_class_svm
marker_mapping: # can be used as CEA: all or CEA: CEA&SCCA. You can comment a marker to disable it
  CEA: ALL
  CYFRA21: ALL
  SCCA: ALL
  NSE: ALL
  ProGRP: ALL
  CA125: ALL
  EGFR: ALL
  IDH1: ALL
  CGA: ALL
  TTF1: ALL
  SYN: ALL
  CD56: ALL
  TPA: ALL
features:
#  - Ct1
#  - Ct2
#  - GAPDH1
#  - GAPDH2
  #  - GAPDHmean
  #  - ΔCt 1
  #  - ΔCt 2
  #  - ΔΔCt 1
  #  - ΔΔCt 2
  #  - Fold 1
  #  - Fold 2
  - Ave Fold
  - sd

feature_selection:
  method: RFE
  kwargs_search:
    n_features_to_select: [ 7, 9, 11, 13, 15, 17, 19, 21, 23, 25 ]
#    n_features_to_select: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 ]

feature_transformation:
  method: lmnn
  kwargs_search:
    n_components: [ null, 3, 5 ]
    init: [ pca, lda, identity ]
    k: [ 1, 3, 5 ]

class_mapping: # You can comment a class to disable it
  0: 0
  1: 1
  2: 2
  3: 3
  #  4: 4
  5: 5
num_split_fold: 3  # num-fold strategy to split train and eval dataset
num_repeat_split_fold: 10  # for RepeatedKFold
split_random_seed: 0.1
# if None, only use the samples that has all markers. or set the default value.
default_missing_value: null
num_samples_in_each_bag: 1  # samples: original sample study. bag: model input with the same class

model: svm
model_kwargs:
  class_weight: balanced
  probability: true
  random_state: 1
model_kwargs_search:
  kernel: [ linear, poly, rbf, sigmoid ]
  C: [ 0.0005, 0.001, 0.1, 1, 10 ]
