data_root: ./data/version_2
#data_clean: robust_covariance  # isolation_forest, local_outlier_factor, robust_covariance or one_class_svm
marker_mapping: # can be used as CEA: all or CEA: CEA&SCCA. You can comment a marker to disable it
  CEA: ALL
  CYFRA21: ALL
  SCCA: ALL
  NSE: ALL
  ProGRP: ALL
  CA125: ALL
  EGFR: ALL
  IDH1: ALL
  CGA: ALL
  TTF1: ALL
  SYN: ALL
  CD56: ALL
  TPA: ALL
features:
  #  - Ct1
  #  - Ct2
  #  - GAPDH1
  #  - GAPDH2
  #  - GAPDHmean
  #  - ΔCt 1
  #  - ΔCt 2
  #  - ΔΔCt 1
  #  - ΔΔCt 2
  #  - Fold 1
  #  - Fold 2
  - Ave Fold
  - sd
feature_selection:
  #  method: select_from_model
  #  kwargs:
  #    threshold: null
  #    max_features: null
  #  method: select_k_best
  #  kwargs:
  #    score_func: mutual_info_classif  # chi2, f_classif or mutual_info_classif
  #    k: 6
  method: RFE
  kwargs_search:
    #    n_features_to_select: [ 1,2,3,4,5,6,7,8,9,10,11,12,13 ]
    #    n_features_to_select: [ 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25 ]
    n_features_to_select: [ 21 ]
#  method: RFECV
#  kwargs:
#    min_features_to_select: 3

feature_transformation:
  method: lmnn
  kwargs_search:
    n_components: [ null, 3 ]
    init: [ pca ]
    k: [ 1, 3 ]

class_mapping: # You can comment a class to disable it
  0: 1
  1: 0
  2: 0
  3: 0
  #  4: 4
  5: 0
num_split_fold: 3  # num-fold strategy to split train and eval dataset
num_repeat_split_fold: 10  # for RepeatedKFold
split_random_seed: 0.1
# if None, only use the samples that has all markers. or set the default value.
default_missing_value: null
num_samples_in_each_bag: 1  # samples: original sample study. bag: model input with the same class

#threshold: [0.7, 0.3]

parameter_search: true

model: voting
sub_model:
  - model: svm
    model_name: linear_svm
    model_kwargs:
      probability: true
      #      C: 0.0008
      kernel: linear
      class_weight: balanced
      random_state: 1
  - model: svm
    model_name: rbf_svm
    model_kwargs:
      probability: true
      #      C: 10
      kernel: rbf
      class_weight: balanced
      random_state: 1

model_kwargs:
  voting: soft

model_kwargs_search:
  rbf_svm__C: [ 1, 10 ]
  linear_svm__C: [ 0.00001, 0.0005, 0.1, 1 ]

